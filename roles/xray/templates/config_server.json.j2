{
    "log": {
        "dnsLog": false,
        "loglevel": "warning"
    },
    "api": {
      "tag": "api",
      "listen": "127.0.0.1:8080",
      "services": ["StatsService"]
    },
    "stats": {},
    "policy": {
        "levels": {
            "0": {
            "statsUserUplink": true,
            "statsUserDownlink": true,
            "statsUserOnline": true
            }
        },
        "system": {
            "statsInboundUplink": true,
            "statsInboundDownlink": true,
            "statsOutboundUplink": true,
            "statsOutboundDownlink": true
        }
    },
    "inbounds": [
        {
            "listen":"0.0.0.0",
            "port": 443, 
            "protocol": "vless",
            "tag": "reality-in",
            "settings": {
                "clients": [
                {% for i in range(xray_clients) %}
                {
                    "id": "{{ uuid_files.results[i].stdout }}",
                    "level": 0,
                    "email": "user{{ i }}@example.com",
                    "flow": "xtls-rprx-vision"
                }{% if not loop.last %},{% endif %}
                {% endfor %}
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "show": false,
                    "dest": "{{ realityDomain }}:443",
                    "xver": 0,
                    "serverNames": [
                        "{{ realityDomain }}"
                    ],
                    "privateKey": "{{ privateKey.stdout }}",
                    "minClientVer": "",
                    "maxClientVer": "",
                    "maxTimeDiff": 0,
                    "shortIds": [
                        "{{ shortId.stdout }}"
                    ]
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls",
                    "quic"
                ],
                "routeOnly": true
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "freedom",
            "tag": "direct"
        },
	    {
            "protocol": "blackhole",
            "tag": "block"
        }
    ],
    "routing": {
      "rules": [
        {
          "type": "field",
          "protocol": "bittorrent",
          "outboundTag": "block"
        }
    ],
    "domainStrategy": "IPIfNonMatch"
  }
}